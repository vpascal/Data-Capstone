temp1
)
temp1
ifelse(
nrow(temp1) == 0,
"the",
return(temp1)
)
ifelse(
nrow(temp1) == 0,
"the",
return(temp1)
)
ifelse(
nrow(temp1) == 0,
"the",
print(temp1)
)
temp1
if(nrow(temp1) == 0){
"the"} esle{
temp1 }
if(nrow(temp1) == 0){
"the"} else{
temp1 }
runApp()
runApp()
runApp()
runApp()
runApp()
test <- input("ohio")
temp1 <-str_detect(bigram_table$ngrams, paste0("^", paste0(test$monogram, " ")))
temp1 <- bigram_table %>% filter(temp1)
View(temp1)
View(trigram_table)
View(temp1)
temp1$ngrams <- gsub(x=temp1$ngrams,pattern=paste0("^",paste(test$monogram, " ")),replacement = "")
View(temp1)
paste0("^",paste(test$monogram, " "))
test <- input("ohio")
temp1 <-str_detect(bigram_table$ngrams, paste0("^", paste0(test$monogram, " ")))
temp1 <- bigram_table %>% filter(temp1)
View(temp1)
temp1$ngrams <- gsub(x=temp1$ngrams,pattern="^ohio"),replacement = "")
temp1$ngrams <- gsub(x=temp1$ngrams,pattern="^ohio",replacement = "")
View(temp1)
temp1$ngrams <- str_trim(temp1$ngrams,side = "both")
View(temp1)
paste0("^", paste0(test$monogram, " ")
)
test <- input("ohio")
temp1 <-str_detect(bigram_table$ngrams, paste0("^", paste0(test$monogram, " ")))
temp1 <- bigram_table %>% filter(temp1)
View(temp1)
temp1$ngrams <- gsub(x=temp1$ngrams,pattern="^ohio ",replacement = "")
temp1$ngrams <- str_trim(temp1$ngrams,side = "both")
View(temp1)
test <- input("ohio")
temp1 <-str_detect(bigram_table$ngrams, paste0("^", paste0(test$monogram, " ")))
temp1 <- bigram_table %>% filter(temp1)
temp1$ngrams <- gsub(x=temp1$ngrams,paste0("^", paste0(test$monogram, " ")),replacement = "")
temp1$ngrams <- str_trim(temp1$ngrams,side = "both")
View(temp1)
test <- input("ohio")
temp1 <-str_detect(bigram_table$ngrams, paste0("^", paste0(test$monogram, " ")))
temp1 <- bigram_table %>% filter(temp1)
View(temp1)
temp1$ngrams <- gsub(x=temp1$ngrams,paste0("^", paste0(test$monogram, " ")),replacement = "")
temp1$ngrams <- str_trim(temp1$ngrams,side = "both")
View(temp1)
runApp()
runApp()
runApp()
runApp()
data_frame(word ="the")
data_frame("word" = c("the"))
data_frame(word = c("the"))
runApp()
runApp()
temp2 <- str_detect(trigram_table$ngrams, paste0("^", phrase$bigram))
runApp()
runApp()
test <- input("i want")
temp2 <- str_detect(trigram_table$ngrams, paste0("^", test$bigram))
temp2 <- trigram_table %>% filter(temp2)
View(temp2)
temp2$ngrams <- gsub(x=temp2$ngrams,pattern=paste0("^",phrase$bigram),replacement = "")
temp2$ngrams <- gsub(x=temp2$ngrams,pattern=paste0("^",test$bigram),replacement = "")
temp2$ngrams <- str_trim(temp2$ngrams,side = "both")
View(temp2)
runApp()
test <- input("i want")
temp2 <- str_detect(trigram_table$ngrams, paste0("^", test$bigram))
temp2 <- trigram_table %>% filter(temp2)
View(temp2)
temp2$ngrams <- gsub(x=temp2$ngrams,pattern=paste0("^",test$bigram),replacement = "")
View(temp2)
temp2$ngrams <- str_trim(temp2$ngrams,side = "both")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
test <- input("i want")
temp2 <- str_detect(trigram_table$ngrams, paste0("^", paste0(phrase$bigram," ")))
temp2 <- trigram_table %>% filter(temp2)
rm(test)
phrase <- input("i want")
temp2 <- str_detect(trigram_table$ngrams, paste0("^", paste0(phrase$bigram," ")))
temp2 <- trigram_table %>% filter(temp2)
temp2$ngrams <- gsub(x=temp2$ngrams,pattern=paste0("^", paste0(phrase$bigram," ")),replacement = "")
temp2$ngrams <- str_trim(temp2$ngrams,side = "both")
View(temp2)
runApp()
phrase <- input("i want")
temp3 <- str_detect(bigram_table$ngrams, paste0("^", paste0(phrase$monogram, " ")))
temp3 <- bigram_table %>% filter(temp3) %>%  filter(freq == max(freq))
temp1$ngrams <- gsub(x=temp1$ngrams,pattern=paste0(phrase$monogram, " "),replacement = "")
temp1$ngrams <- str_trim(temp1$ngrams,side = "both")
View(temp3)
temp3 <- str_detect(bigram_table$ngrams, paste0("^", paste0(phrase$monogram, " ")))
temp3 <- bigram_table %>% filter(temp3) %>%  filter(freq == max(freq))
temp3$ngrams <- gsub(x=temp1$ngrams,pattern=paste0(phrase$monogram, " "),replacement = "")
temp3$ngrams <- str_trim(temp1$ngrams,side = "both")
temp3 <- str_detect(bigram_table$ngrams, paste0("^", paste0(phrase$monogram, " ")))
temp3 <- bigram_table %>% filter(temp3) %>%  filter(freq == max(freq))
temp3$ngrams <- gsub(x=temp1$ngrams,pattern=paste0(phrase$monogram, " "),replacement = "")
temp3 <- str_detect(bigram_table$ngrams, paste0("^", paste0(phrase$monogram, " ")))
temp3 <- bigram_table %>% filter(temp3) %>%  filter(freq == max(freq))
temp3$ngrams <- gsub(x=temp3$ngrams,pattern=paste0(phrase$monogram, " "),replacement = "")
temp3$ngrams <- str_trim(temp3$ngrams,side = "both")
View(temp3)
runApp()
runApp()
View(trigram_table)
View(bigram_table)
runApp()
View(trigram_table)
runApp()
runApp()
runApp()
View(trigram_table)
shiny::runApp()
runApp()
if(nrow(temp2) > 0){
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paste0(1,2,"test")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
icon("calendar")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
test <- tibble(cars)
test <- tibble(iris)
cars[1,1]
runApp()
runApp()
runApp()
as.character(cars[1,1])
as.character(cars[,1])
as.character(cars[1,1])
unlist(as.character(cars[1,1]))
unname(as.character(cars[1,1]))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
icon("calendar")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(readr)
library(stringr)
library(dplyr)
library(ngram)
library(feather)
library(shiny)
runApp()
library(readr)
library(stringr)
library(dplyr)
library(ngram)
library(feather)
library(shiny)
source("helpers.R")
bigram_table <- read_feather("data/bigram.feather")
trigram_table <- read_feather("data/trigram.feather")
View(bigram_table)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(readr)
library(stringr)
library(dplyr)
library(ngram)
library(feather)
library(shiny)
source("helpers.R")
bigram_table <- read_feather("data/bigram.feather")
trigram_table <- read_feather("data/trigram.feather")
bigram_table %>% top_n()
bigram_table %>% top_n(freq)
View(bigram_table)
bigram_table %>% arrange(freq) %>% top_n(3)
bigram_table %>% arrange(freq) %>% top_n(5)
bigram_table %>% arrange(freq) %>% top_n(5)
bigram_table %>% arrange(freq) %>% top_n(-5)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
as.character(cars)
runApp()
runApp()
runApp()
as.character(unlist(candidates))
candidates <- temp1 %>% arrange(freq) %>% top_n(-4) %>% select(ngrams)
as.character(unlist(candidates))
unlist(candidates)
as.character(unlist(candidates))
paste(as.character(unlist(candidates)),sep = ",")
paste(unlist(candidates),sep = ",")
as.character(paste(unlist(candidates),sep = ","))
paste(unlist(candidates),sep = ",")
runApp()
rm(candidates)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
candidates <- temp1 %>% arrange(freq) %>% top_n(-4) %>% select(ngrams)
paste(unlist(candidates),sep = ",")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paste("this is",sep = ",")
paste("this is",collapse = ",")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(trigram_table)
runApp()
runApp()
runApp()
runApp()
View(trigram_table)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
?a(0)
?a()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(readr)
library(stringr)
library(dplyr)
library(ngram)
library(feather)
library(shiny)
source("helpers.R")
bigram_table <- read_feather("data/bigram.feather")
trigram_table <- read_feather("data/trigram.feather")
nrows(bigram_table)+nrow(trigram_table)
nrow(bigram_table)+nrow(trigram_table)
shiny::runApp()
runApp()
shiny::runApp()
